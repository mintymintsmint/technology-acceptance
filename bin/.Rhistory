res <- wilcox.test(data$VU, mu = 3, alternative = "less")
res.p.value
shapiro.test(data$VU) # normality cannot be assumed
mean(data$VU)
median(data$VU)
skewness(data$VU) # symmetric enough for one-sample Wilcoxon test
res <- wilcox.test(data$VU, mu = 3, alternative = "less")
res$p.value
shapiro.test(data$VU) # normality cannot be assumed
mean(data$VU)
median(data$VU)
skewness(data$VU) # symmetric enough for one-sample Wilcoxon test
wilcox.test(data$VU, mu = 3, alternative = "less")
# display perceived ease of use
hist1 <- ggplot(data, aes(PE) ) +
geom_histogram(na.rm = T,
colour = "dodgerblue4",  # contour color
fill   = "forestgreen",  # fill/insides color
bins  = 25) +
xlim(1,5) +
labs(y = "Frequency",
x = "Perceived Ease of Use",
caption = "Data: umfrage.up",
title = "Histogram of Perceived Ease of Use of Moodle") +
theme(plot.title    = element_text(color = "royalblue4",
size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")  # text formatting
)
# display perceived usefulness
hist2 <- ggplot(data, aes(PU) ) +
geom_histogram(na.rm = T,
colour = "dodgerblue4",  # contour color
fill   = "forestgreen",  # fill/insides color
bins  = 25) +
xlim(1,5) +
labs(y = "Frequency",
x = "Perceived Usefulness",
caption = "Data: umfrage.up",
title = "Histogram of Perceived Usefulness of Moodle") +
theme(plot.title    = element_text(color = "royalblue4",
size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")  # text formatting
)
hist1
hist2
# display perceived ease of use by academic discipline
plot_AD_PE <- ggplot(data, aes(x = AD03, y = PE, fill = AD03) )+
geom_boxplot(coef = 2,  # length of whiskers
notchwidth = 0.5,
outlier.stroke = 0.7,  # boldness of outliers
outlier.size   = 1,
outlier.colour = "coral2",
outlier.shape  = 25  # triangle-shape
) +
ylim(1,5) +
scale_x_discrete(labels = label_wrap(10)) +
scale_color_brewer(type = "qual", palette = 2) +
labs(title = "Perceived Ease of Use by Academic Discipline",
x = "Academic Discipline",
y = "Perceived Ease of Use",
caption = "Data: umfrage.up") +
theme(plot.title    = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")
)
plot_AD_PE
# display perceived usefulness by academic discipline
plot_AD_PU <- ggplot(data, aes(x = AD03, y = PU, fill = AD03) )+
geom_boxplot(coef = 2,  # length of whiskers
notchwidth = 0.5,
outlier.stroke = 0.7,  # boldness of outliers
outlier.size   = 1,
outlier.colour = "coral2",
outlier.shape  = 25  # 25 - triangles, nice shape
) +
ylim(1,5) +
scale_x_discrete(labels = label_wrap(10)) +
scale_color_brewer(type = "qual", palette = 3) +
labs(title = "Perceived Usefulness by Academic Discipline",
x = "Academic Discipline",
y = "Perceived Usefulness",
caption = "Data: umfrage.up") +
theme(plot.title    = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")
)
plot_AD_PU
# collect mean PE for every academic discipline
PE_mean <- aggregate(PE~AD03, data = data, mean)
PE_mean <- PE_mean[order(PE_mean$PE),]
PE_mean
# collect mean PU for every academic discipline
PU_mean <- aggregate(PU~AD03, data = data, mean)
PU_mean <- PU_mean[order(PU_mean$PU),]
PU_mean
# display mean PE by academic discipline
plot_AD_avgPE <- ggplot(PE_mean, aes(x = AD03, y = PE)) +
geom_point(na.rm = T) +
ylim(1,5) +
scale_x_discrete(limits = c("Mathematics","Educational and Cognitive Sciences","Humanities, Cultural Sciences and Theology","Economics","Social Sciences","Psychology","Computer Science","Natural Sciences","Law"), # force certain order of academic disciplines
labels = label_wrap(10)) + # wrap names to prevent overlapping
labs(title = "Average Perceived Ease of Use by Academic Discipline",
x = "Academic Discipline",
y = "Average Perceived Ease of use",
caption = "Data: umfrage.up") +
theme(plot.title    = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")
)
plot_AD_avgPE
# display mean PU by academic discipline
plot_AD_avgPU <- ggplot(PU_mean, aes(x = AD03, y = PU)) +
geom_point(na.rm = T) +
ylim(0,5) +
scale_x_discrete(limits = c("Humanities, Cultural Sciences and Theology","Social Sciences","Economics","Natural Sciences","Mathematics","Educational and Cognitive Sciences","Computer Science","Law","Psychology"),
labels = label_wrap(10)) +
labs(title = "Average Perceived Usefulness by Academic Discipline",
x = "Academic Discipline",
y = "Average Perceived Usefulness",
caption = "Data: umfrage.up") +
theme(plot.title    = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")
)
plot_AD_avgPU
knitr::opts_chunk$set(echo = TRUE)
#install.packages("here")
library(here)
here()
data <- read.csv2(here("data", "data_tastudents.csv"), encoding="UTF-8", fileEncoding="latin1") # import data
dim(data) # make sure correct number of columns and rows were imported
str(data) # check data types
anyNA(data) # no initial NA values
for (i in 1:nrow(data)) { # loop through all rows and columns to replace empty values that are coded as -9 as actual NA that are recognized by R
for (j in 1:ncol(data)) {
if (data[i, j] == -9) {
data[i, j] <- NA
}
}
}
anyNA(data)
colSums(is.na(data)) # check which columns contain NAs
colnames(data)[1] <- "ID" # rename first column to ID since name got corrupted during the import process
colnames(data)
str(data)
# correct data types
data$AD01 <- factor(data$AD01)
data$AD02 <- factor(data$AD02)
data$AD03 <- factor(data$AD03)
data$AU02 <- factor(data$AU02)
data$DE02 <- factor(data$DE02)
data$DE03 <- factor(data$DE03)
str(data)
# add "Other" level to some factors
levels(data$AD02) <- c(levels(data$AD02), "Other")
levels(data$DE02) <- c(levels(data$DE02), "Other")
levels(data$DE03) <- c(levels(data$DE03), "Other")
# change NAs to "Other" value
data$AD02[is.na(data$AD02)] <- "Other"
data$DE02[is.na(data$DE02)] <- "Other"
data$DE03[is.na(data$DE03)] <- "Other"
# check that there are no more NAs
colSums(is.na(data))
# introduce  variable AT01_04R to indicate it is reworked
data$AT01_04R[data$AT01_04 == 3] <- 3 # neither agree or disagree stays the same
data$AT01_04R[data$AT01_04 == 2] <- 4 # disagree becomes agree
data$AT01_04R[data$AT01_04 == 1] <- 5 # strongly disagree becomes strongly agree
data$AT01_04R[data$AT01_04 == 4] <- 2 # agree becomes disagree
data$AT01_04R[data$AT01_04 == 5] <- 1 # strongly agree becomes strongly disagree
as.integer(data$AT01_04R)
data$AT01_04R <- as.integer(data$AT01_04R)
head(data) # check that values are correct
# introduce  variable VU01_01R to indicate it is reworked, higher number indicates lower voluntariness
data$VU01_01R[data$VU01_01 == 3] <- 3 # neither agree or disagree stays the same
data$VU01_01R[data$VU01_01 == 2] <- 4 # disagree becomes agree
data$VU01_01R[data$VU01_01 == 1] <- 5 # strongly disagree becomes strongly agree
data$VU01_01R[data$VU01_01 == 4] <- 2 # agree becomes disagree
data$VU01_01R[data$VU01_01 == 5] <- 1 # strongly agree becomes strongly disagree
data$VU01_01R <- as.integer(data$VU01_01R)
str(data)
data[data$AU02 == 2,]
# calculate mean of the variables and add as new column
str(data)
data$AT <- rowMeans(data[,c(5,6,7,36)]) # use reworked variable
data$BI <- rowMeans(data[,13:17])
data$PE <- rowMeans(data[,21:26])
data$PU <- rowMeans(data[,27:32])
data$VU <- rowMeans(data[,c(34,35,37)]) # use reworked variable
data$AU <- rowMeans(data[,9:11])
head(data)
# use pacman to manage packages
#install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
p_load(RColorBrewer, # color pallets
ggplot2,      # prettier graphs
cowplot,      # arranges ggplot graphs nicely
moments,       # for calculating skeweness
scales,
car,
ggpubr,
e1071
)
# calculate mean of the variables and add as new column
str(data)
data$AT <- rowMeans(data[,c(5,6,7,36)]) # use reworked variable
data$BI <- rowMeans(data[,13:17])
data$PE <- rowMeans(data[,21:26])
data$PU <- rowMeans(data[,27:32])
data$VU <- rowMeans(data[,c(34,35,37)]) # use reworked variable
data$AU <- rowMeans(data[,9:11])
head(data)
# use pacman to manage packages
#install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
p_load(RColorBrewer, # color pallets
ggplot2,      # prettier graphs
cowplot,      # arranges ggplot graphs nicely
moments,       # for calculating skeweness
scales,
car,
ggpubr,
e1071
)
# plot to show extent of voluntariness of Moodle use to determine whether AT/BI/AU are proper variables to use for statistical testing
plot_vol <- ggplot(data, aes(VU) ) +
geom_histogram(na.rm = T,
colour = "dodgerblue4",  # contour color
fill   = "forestgreen",  # fill/insides color
bins  = 40) +
xlim(1,5) +
ylim(0,15) +
labs(y = "Frequency",
x = "Voluntariness of Moodle Use",
caption = "Data: umfrage.up",
title = "Histogram of the Voluntariness of Moodle Use") +
theme(plot.title    = element_text(color = "royalblue4",
size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")  # text formatting
)
plot_vol
shapiro.test(data$VU) # normality cannot be assumed
mean(data$VU)
median(data$VU)
skewness(data$VU) # symmetric enough for one-sample Wilcoxon test
wilcox.test(data$VU, mu = 3, alternative = "less")
# add labels to make plot more understandable
data$AD03 <- factor(data$AD03,
levels = c(1,2,3,4,5,6,7,8,9,10),
labels = c("Computer Science","Economics","Educational and Cognitive Sciences","Humanities, Cultural Sciences and Theology","Law","Mathematics","Natural Sciences","Psychology","Social Sciences","Sports and Health Science")
)
# plot to display distribution of academic discipline among participants of study
plot_ad_dis <- ggplot(data, aes(x = AD03, fill = AD03)) +
geom_bar(position = "dodge") + # elements next to each other
labs(title = "Distribution of Academic Discpline",
x = "Academic Discipline",
y = "Count") +
scale_x_discrete(labels = label_wrap(10)) +
scale_fill_brewer(palette = "Set3") +
theme(plot.title    = element_text(color = "royalblue4",
size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")
)
plot_ad_dis
# display perceived ease of use
hist1 <- ggplot(data, aes(PE) ) +
geom_histogram(na.rm = T,
colour = "dodgerblue4",  # contour color
fill   = "forestgreen",  # fill/insides color
bins  = 25) +
xlim(1,5) +
labs(y = "Frequency",
x = "Perceived Ease of Use",
caption = "Data: umfrage.up",
title = "Histogram of Perceived Ease of Use of Moodle") +
theme(plot.title    = element_text(color = "royalblue4",
size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")  # text formatting
)
# display perceived usefulness
hist2 <- ggplot(data, aes(PU) ) +
geom_histogram(na.rm = T,
colour = "dodgerblue4",  # contour color
fill   = "forestgreen",  # fill/insides color
bins  = 25) +
xlim(1,5) +
labs(y = "Frequency",
x = "Perceived Usefulness",
caption = "Data: umfrage.up",
title = "Histogram of Perceived Usefulness of Moodle") +
theme(plot.title    = element_text(color = "royalblue4",
size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")  # text formatting
)
hist1
hist2
# display perceived ease of use by academic discipline
plot_AD_PE <- ggplot(data, aes(x = AD03, y = PE, fill = AD03) )+
geom_boxplot(coef = 2,  # length of whiskers
notchwidth = 0.5,
outlier.stroke = 0.7,  # boldness of outliers
outlier.size   = 1,
outlier.colour = "coral2",
outlier.shape  = 25  # triangle-shape
) +
ylim(1,5) +
scale_x_discrete(labels = label_wrap(10)) +
scale_color_brewer(type = "qual", palette = 2) +
labs(title = "Perceived Ease of Use by Academic Discipline",
x = "Academic Discipline",
y = "Perceived Ease of Use",
caption = "Data: umfrage.up") +
theme(plot.title    = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")
)
plot_AD_PE
# display perceived usefulness by academic discipline
plot_AD_PU <- ggplot(data, aes(x = AD03, y = PU, fill = AD03) )+
geom_boxplot(coef = 2,  # length of whiskers
notchwidth = 0.5,
outlier.stroke = 0.7,  # boldness of outliers
outlier.size   = 1,
outlier.colour = "coral2",
outlier.shape  = 25  # 25 - triangles, nice shape
) +
ylim(1,5) +
scale_x_discrete(labels = label_wrap(10)) +
scale_color_brewer(type = "qual", palette = 3) +
labs(title = "Perceived Usefulness by Academic Discipline",
x = "Academic Discipline",
y = "Perceived Usefulness",
caption = "Data: umfrage.up") +
theme(plot.title    = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")
)
plot_AD_PU
# collect mean PE for every academic discipline
PE_mean <- aggregate(PE~AD03, data = data, mean)
PE_mean <- PE_mean[order(PE_mean$PE),]
PE_mean
# collect mean PU for every academic discipline
PU_mean <- aggregate(PU~AD03, data = data, mean)
PU_mean <- PU_mean[order(PU_mean$PU),]
PU_mean
# display mean PE by academic discipline
plot_AD_avgPE <- ggplot(PE_mean, aes(x = AD03, y = PE)) +
geom_point(na.rm = T) +
ylim(1,5) +
scale_x_discrete(limits = c("Mathematics","Educational and Cognitive Sciences","Humanities, Cultural Sciences and Theology","Economics","Social Sciences","Psychology","Computer Science","Natural Sciences","Law"), # force certain order of academic disciplines
labels = label_wrap(10)) + # wrap names to prevent overlapping
labs(title = "Average Perceived Ease of Use by Academic Discipline",
x = "Academic Discipline",
y = "Average Perceived Ease of use",
caption = "Data: umfrage.up") +
theme(plot.title    = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")
)
plot_AD_avgPE
# display mean PU by academic discipline
plot_AD_avgPU <- ggplot(PU_mean, aes(x = AD03, y = PU)) +
geom_point(na.rm = T) +
ylim(0,5) +
scale_x_discrete(limits = c("Humanities, Cultural Sciences and Theology","Social Sciences","Economics","Natural Sciences","Mathematics","Educational and Cognitive Sciences","Computer Science","Law","Psychology"),
labels = label_wrap(10)) +
labs(title = "Average Perceived Usefulness by Academic Discipline",
x = "Academic Discipline",
y = "Average Perceived Usefulness",
caption = "Data: umfrage.up") +
theme(plot.title    = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic")
)
plot_AD_avgPU
# create table with average PE and PU per academic discipline
AD_PE_PU <- aggregate(PE~AD03, data = data, mean)
PU_temp <- aggregate(PU~AD03, data = data, mean)
AD_PE_PU$PU <- PU_temp$PU
# display relationship between PE and PU
plot_PE_PU <- ggplot(AD_PE_PU, aes(x = PE, y = PU)) +
geom_point(na.rm = T) +  # a layer of points
geom_smooth(na.rm = T,
method = "lm",   # linear model
se = F,
colour = "coral3",
show.legend = T) +
labs(title = "Relationship between Average Perceived Ease of Use and \n Average Perceived Usefulness",
caption = "Data: umfrage.up",
x = "Perceived Ease of Use",
y = "Perceived Usefulness") +
theme(plot.title = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic"))
plot_PE_PU
ggsave("histPE.png", plot = hist1, path = here("results"))
ggsave("histPU.png", plot = hist2, path = here("results"))
ggsave("plot_AD_avgPE.png", plot = plot_AD_avgPE, path = here("results"))
ggsave("plot_AD_avgPU.png", plot = plot_AD_avgPU, path = here("results"))
ggsave("plot_ad_dis.png", plot = plot_ad_dis, path = here("results"), width = 12)
ggsave("plot_AD_PE.png", plot = plot_AD_PE, path = here("results"), width = 12)
ggsave("plot_AD_PU.png", plot = plot_AD_PU, path = here("results"), width = 12)
ggsave("plot_PE_PU.png", plot = plot_PE_PU, path = here("results"))
ggsave("plot_vol.png", plot = plot_vol, path = here("results"))
PE.aov <- aov(PE ~ AD03, data = data)
summary(PE.aov)
PU.aov <- aov(PU ~ AD03, data = data)
summary(PU.aov)
# testing AT and BI is more for insurance that I wasn't wrong to exclude it, wont be included in report
AT.aov <- aov(AT ~ AD03, data = data)
summary(AT.aov)
BI.aov <- aov(BI ~ AD03, data = data)
summary(BI.aov)
# tests homogeneity of variance (assumption to use one-way ANOVA)
leveneTest(PE ~ AD03, data = data)
leveneTest(PU ~ AD03, data = data)
leveneTest(AT ~ AD03, data = data)
leveneTest(BI ~ AD03, data = data)
PE.res <- residuals(object = PE.aov)
PU.res <- residuals(object = PU.aov)
AT.res <- residuals(object = AT.aov)
BI.res <- residuals(object = BI.aov)
# test normality (assumption to use one-way ANOVA)
shapiro.test(x = PE.res)
shapiro.test(x = PU.res)
shapiro.test(x = AT.res)
shapiro.test(x = BI.res)
summary(data[c("AD01","AD02","AD03","DE02","DE03","AT","BI","PE","PU","VU")])
summary(data[c("AD01","AD02","AD03","DE02","DE03","AT","BI","PE","PU","VU","AU")])
# display relationship between voluntariness and behavioral intention
plot_BI_VU <- ggplot(data, aes(x = BI, y = VU)) +  # label = Name
geom_point(na.rm = T) +  # a layer of points
ylim(1,5) +
xlim(1,5) +
geom_smooth(na.rm = T,
method = "lm",   # linear model
se = F,
colour = "green4",
show.legend = T) +
labs(title = "Non-Linear Relationship between Behavioral Intention and \n Voluntariness of Moodle Use",
caption = "Data: umfrage.up",
x = "Behavioral Intention",
y = "Voluntariness") +
theme(plot.title = element_text(color = "darkgreen", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic"))
plot_BI_VU
ggsave("plot_BI_VU.png", plot = plot_BI_VU, path = here("results"))
# check answers for what devices / software participants use for their studies
data$OT01_02
# manually add number of parts in personal ecosystem from OT01_02
data$OT_number <- c(NA,4,NA,NA,4,1,7,2,14,3,10,6,7,9,6,5,4,14,2,1,3,7,9,4,9,6,11,2,4,12,4,2,1,14,1,4,9,4,11,2,3,1,9,1,2,11,5,11,14,3,6,9,4,5,NA,4,NA,3,4,4,6,6,5,9,2,4,2,5)
# make new data frame with needed columns
OT_data <- data[,c("ID","AT","BI","PE","PU","VU","OT_number","AD03")]
# remove columns containing NAs
OT_data_new <- na.omit(OT_data)
# mean number of parts of personal ecosystems
OT_mean <- aggregate(OT_number~AD03, data = OT_data_new, mean)
OT_mean
# one-way ANOVA test
OT.aov <- aov(OT_number ~ AD03, data = OT_data_new)
summary(OT.aov)
# test assumptions for one-way ANOVA
leveneTest(OT_number ~ AD03, data = OT_data_new)
OT.res <- residuals(object = OT.aov)
shapiro.test(x = OT.res)
# alternative to one-way ANOVA
kruskal.test(OT_number ~ AD03, data = OT_data_new)
# display relationship between OT number and PE
plot_OT_PE <- ggplot(OT_data_new, aes(x = OT_number, y = PE)) +
geom_point(na.rm = T) +
ylim(1,5) +
geom_smooth(na.rm = T,
method = "lm",
se = F,
colour = "coral3",
show.legend = T) +
labs(title = "Relationship between Average Perceived Ease of Use and \n Number of Devices/Software Used",
caption = "Data: umfrage.up",
x = "Number of Devices / Software of Personal Ecosystem",
y = "Perceived Ease of Use") +
theme(plot.title = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic"))
plot_OT_PE
# display relationship between OT numbers and PU
plot_OT_PU <- ggplot(OT_data_new, aes(x = OT_number, y = PU)) +
geom_point(na.rm = T) +
ylim(1,5) +
geom_smooth(na.rm = T,
method = "lm",
se = F,
colour = "coral3",
show.legend = T) +
labs(title = "Relationship between Average Perceived Usefulness and \n Number of Devices/Software Used",
caption = "Data: umfrage.up",
x = "Number of Devices / Software of Personal Ecosystem",
y = "Perceived Usefulness") +
theme(plot.title = element_text(color = "royalblue4", size = 16, face = "bold"),
plot.caption  = element_text(face = "italic"))
plot_OT_PU
# linear models for OT numbers an PE and OT numbers and PU
OT_PE_lm <- lm(OT_number~PE, data=OT_data_new)
summary(OT_PE_lm)
OT_PU_lm <- lm(OT_number~PU, data=OT_data_new)
summary(OT_PU_lm)
plot(OT_PE_lm$residuals, pch = 16, col = "green4")
plot(OT_PU_lm$residuals, pch = 16, col = "green4")
# check linearity
plot(OT_PE_lm, 1)
plot(OT_PU_lm, 1)
# independence between variables
durbinWatsonTest(OT_PE_lm)
durbinWatsonTest(OT_PU_lm)
# normality test
shapiro.test(OT_data_new$OT_number)
shapiro.test(OT_data_new$PE)
shapiro.test(OT_data_new$PU)
# Kendall tau correlation test
K.PE.res <- cor.test(OT_data_new$OT_number, OT_data_new$PE,  method="kendall")
K.PE.res
K.PU.res <- cor.test(OT_data_new$OT_number, OT_data_new$PU,  method="kendall")
K.PU.res
